{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF72dA452Ee8Bb888146E0B025047Bd8A2C011572",
    "txHash": "0x9482c5b98ab5560ec225a02b5958473aa2b4ed9300748732dbdafbca035f9ff2"
  },
  "proxies": [
    {
      "address": "0xFc6728b34D11C17c454108B3EAeDA0812d2907a6",
      "txHash": "0x4ec0a4b8fec1750792fff03680455b0ebcfaa71efd062b9ee386de95ee52b9c9",
      "kind": "transparent"
    },
    {
      "address": "0xF0f3bd8344e52770c6E469867397D3F1480AeA36",
      "txHash": "0x07b8e8c6e567fc99a8c2532282bf82acb61401820b93b5ba212836cf680ffda9",
      "kind": "transparent"
    },
    {
      "address": "0x63C0bF46f7898C5D1cc7bFf3736b22E5dBBf5Af5",
      "txHash": "0x4b88515e70511f84795daef614fafce4b02bded0219db652d94967ae605d8700",
      "kind": "transparent"
    },
    {
      "address": "0x292D8BACc94B8EF9d640C7449891349d7A14c3A6",
      "txHash": "0x80a643cb283396626189928c1b178d3bd5da6ac724190a4193031949cead23d7",
      "kind": "transparent"
    },
    {
      "address": "0x9579EcACF1659b240CC09b2b15237b98571F6160",
      "txHash": "0x2f201382204f91cc85039716f9fd672546aa5d506e74aab0f13b8681116f0303",
      "kind": "transparent"
    },
    {
      "address": "0xb153c0F97ECC7DBdD5c918282f5F06Df90e6541E",
      "txHash": "0xa4d39914e361f6cc7802db81ad4fa8e0928d36e5968a69e6c04746beaf450d28",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d8acd5d82c13b37931af99eea9c2ea9f715f5430826b886e83254be68ce9537c": {
      "address": "0xd214528803d3b6e6C8143aFdd3E64Fa4d3B78bCB",
      "txHash": "0x53318e6bb83d17997d41857a7b29973590216fcd5474bea307fb96a6591a5140",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_pendingOwner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:70"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
          },
          {
            "label": "_totalReleased",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:36"
          },
          {
            "label": "_shares",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
          },
          {
            "label": "_payees",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:40"
          },
          {
            "label": "_erc20TotalReleased",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_contract(IERC20Upgradeable)1593,t_uint256)",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
          },
          {
            "label": "_erc20Released",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_contract(IERC20Upgradeable)1593,t_mapping(t_address,t_uint256))",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)43_storage",
            "contract": "PaymentSplitterUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:225"
          },
          {
            "label": "_currentPhase",
            "offset": 0,
            "slot": "301",
            "type": "t_enum(PHASE_ID)8124",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:119"
          },
          {
            "label": "_avatar",
            "offset": 1,
            "slot": "301",
            "type": "t_address",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:123"
          },
          {
            "label": "_keyCard",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:127"
          },
          {
            "label": "_discountSigner",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:131"
          },
          {
            "label": "_saleCategories",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(SaleCategory)8150_storage)",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:135"
          },
          {
            "label": "_tokensMintedByUser",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:136"
          },
          {
            "label": "_appliedDiscountIndex",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:141"
          },
          {
            "label": "_tokensToReserve",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_enum(PHASE_ID)8124,t_uint96)",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:143"
          },
          {
            "label": "_reservedForPhase",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_enum(PHASE_ID)8124,t_bool)",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:144"
          },
          {
            "label": "_saleCounter",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(Counter)3682_storage",
            "contract": "ControllerStorage",
            "src": "contracts/Controller/ControllerStorage.sol:148"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1593": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_enum(PHASE_ID)8124": {
            "label": "enum IController.PHASE_ID",
            "members": [
              "PHASE_1",
              "PHASE_2",
              "PHASE_3"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20Upgradeable)1593,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20Upgradeable)1593,t_uint256)": {
            "label": "mapping(contract IERC20Upgradeable => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(PHASE_ID)8124,t_bool)": {
            "label": "mapping(enum IController.PHASE_ID => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(PHASE_ID)8124,t_uint96)": {
            "label": "mapping(enum IController.PHASE_ID => uint96)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SaleCategory)8150_storage)": {
            "label": "mapping(uint256 => struct IController.SaleCategory)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3682_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SaleCategory)8150_storage": {
            "label": "struct IController.SaleCategory",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "perWalletLimit",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "perTransactionLimit",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "supply",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "tokensMinted",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "keyCardPerAvatar",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint96",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint96",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "phase",
                "type": "t_enum(PHASE_ID)8124",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "isDiscountEnabled",
                "type": "t_bool",
                "offset": 2,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "cdae977ff5902a077f6e4df00a180626e3c3c0932a7d89d64e0fecdc36e98ee2": {
      "address": "0xA674559F0fd33d7825bC93dDC9E96c45BE5fa8a6",
      "txHash": "0x3164c02f671da1292326a93bc60596dec117198b26ca3cae79bfe9386b705ac0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_maximumTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "AvatarStorage",
            "src": "contracts/Avatar/AvatarStorage.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b650c090dfae7a6eb1f6ef831180228433fb129f04abd2df6d8509952906668b": {
      "address": "0xa8F53ABaBE0689A3454E46c8B0e8e869Bca92157",
      "txHash": "0x6c145a67347e94c378a3ae677ae5631b10689992a18d8480c830a541681b9a18",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
