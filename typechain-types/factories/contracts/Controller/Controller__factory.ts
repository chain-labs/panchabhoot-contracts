/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Controller,
  ControllerInterface,
} from "../../../contracts/Controller/Controller";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldAvatar",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newAvatar",
        type: "address",
      },
    ],
    name: "AvatarUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_oldKeyCard",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newKeyCard",
        type: "address",
      },
    ],
    name: "MemberKeyCardUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeyCard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAvatar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newKeyCard",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_shares",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAvatar",
        type: "address",
      },
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newKeyCard",
        type: "address",
      },
    ],
    name: "setKeyCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e7d806100206000396000f3fe6080604052600436106101a55760003560e01c80639852595c116100e1578063ce7c2ac21161008a578063e33b7de311610064578063e33b7de314610507578063ed3c66941461051c578063f2fde38b1461053c578063ffa1ad741461055c57600080fd5b8063ce7c2ac21461047c578063d79779b2146104b2578063e30c3978146104e957600080fd5b8063aa8b20f6116100bb578063aa8b20f614610432578063c4025d3b14610447578063c45ac0501461045c57600080fd5b80639852595c14610386578063a3f4df7e146103bc578063a3f8eace1461041257600080fd5b806348b750441161014e57806379ba50971161012857806379ba5097146103065780638456cb591461031b5780638b83209b146103305780638da5cb5b1461036857600080fd5b806348b75044146102ae5780635c975abb146102ce578063715018a6146102f157600080fd5b80633a98ef391161017f5780633a98ef39146102555780633f4ba83a14610279578063406072a91461028e57600080fd5b8063086cfca8146101f357806313c769bc14610215578063191655871461023557600080fd5b366101ee577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b3480156101ff57600080fd5b5061021361020e366004611ac7565b6105a5565b005b34801561022157600080fd5b50610213610230366004611ac7565b6105b9565b34801561024157600080fd5b50610213610250366004611ac7565b6105ca565b34801561026157600080fd5b5060fb545b6040519081526020015b60405180910390f35b34801561028557600080fd5b5061021361073a565b34801561029a57600080fd5b506102666102a9366004611ae4565b61074c565b3480156102ba57600080fd5b506102136102c9366004611ae4565b61077a565b3480156102da57600080fd5b5060335460ff166040519015158152602001610270565b3480156102fd57600080fd5b50610213610910565b34801561031257600080fd5b50610213610922565b34801561032757600080fd5b506102136109ad565b34801561033c57600080fd5b5061035061034b366004611b1d565b6109bd565b6040516001600160a01b039091168152602001610270565b34801561037457600080fd5b506065546001600160a01b0316610350565b34801561039257600080fd5b506102666103a1366004611ac7565b6001600160a01b0316600090815260fe602052604090205490565b3480156103c857600080fd5b506104056040518060400160405280600a81526020017f436f6e74726f6c6c65720000000000000000000000000000000000000000000081525081565b6040516102709190611b5a565b34801561041e57600080fd5b5061026661042d366004611ac7565b6109ed565b34801561043e57600080fd5b50610350610a35565b34801561045357600080fd5b50610350610a4f565b34801561046857600080fd5b50610266610477366004611ae4565b610a64565b34801561048857600080fd5b50610266610497366004611ac7565b6001600160a01b0316600090815260fd602052604090205490565b3480156104be57600080fd5b506102666104cd366004611ac7565b6001600160a01b03166000908152610100602052604090205490565b3480156104f557600080fd5b506097546001600160a01b0316610350565b34801561051357600080fd5b5060fc54610266565b34801561052857600080fd5b50610213610537366004611c63565b610b24565b34801561054857600080fd5b50610213610557366004611ac7565b610c74565b34801561056857600080fd5b506104056040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b6105ad610ce5565b6105b681610d3f565b50565b6105c1610ce5565b6105b681610d9a565b6001600160a01b038116600090815260fd60205260409020546106435760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b600061064e826109ed565b9050806000036106b45760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b606482015260840161063a565b8060fc60008282546106c69190611d62565b90915550506001600160a01b038216600090815260fe602052604090208054820190556106f38282610df5565b604080516001600160a01b0384168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b05691015b60405180910390a15050565b610742610ce5565b61074a610f13565b565b6001600160a01b03808316600090815261010160209081526040808320938516835292905220545b92915050565b6001600160a01b038116600090815260fd60205260409020546107ee5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b606482015260840161063a565b60006107fa8383610a64565b9050806000036108605760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b606482015260840161063a565b6001600160a01b0383166000908152610100602052604081208054839290610889908490611d62565b90915550506001600160a01b038084166000908152610101602090815260408083209386168352929052208054820190556108c5838383610f65565b604080516001600160a01b038481168252602082018490528516917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a2505050565b610918610ce5565b61074a6000610fe5565b60975433906001600160a01b031681146109a45760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e65720000000000000000000000000000000000000000000000606482015260840161063a565b6105b681610fe5565b6109b5610ce5565b61074a610ffe565b600060ff82815481106109d2576109d2611d75565b6000918252602090912001546001600160a01b031692915050565b6000806109f960fc5490565b610a039047611d62565b9050610a2e8382610a29866001600160a01b0316600090815260fe602052604090205490565b61103b565b9392505050565b6000610a4a61012d546001600160a01b031690565b905090565b6000610a4a61012e546001600160a01b031690565b6001600160a01b0382166000908152610100602052604081205481906040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190611d8b565b610b0b9190611d62565b9050610b1c8382610a29878761074c565b949350505050565b600054610100900460ff1615808015610b445750600054600160ff909116105b80610b5e5750303b158015610b5e575060005460ff166001145b610bd05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161063a565b6000805460ff191660011790558015610bf3576000805461ff0019166101001790555b610bfb611079565b610c036110ec565b610c0b61115f565b610c1583836111d2565b610c1e85610d3f565b610c2784610d9a565b8015610c6d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b610c7c610ce5565b609780546001600160a01b0383166001600160a01b03199091168117909155610cad6065546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6065546001600160a01b0316331461074a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063a565b61012d80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fd4de48e66b336cc79b77fc1b591b65bb68deecf4d200b4f7a8bf2de905d974c3910161072e565b61012e80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f8948754ceb204cbd00768f5392091735e97d9f63305edd2348491f3f14189447910161072e565b80471015610e455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161063a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e92576040519150601f19603f3d011682016040523d82523d6000602084013e610e97565b606091505b5050905080610f0e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161063a565b505050565b610f1b61124b565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610f0e90849061129d565b609780546001600160a01b03191690556105b681611382565b6110066113d4565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f483390565b60fb546001600160a01b038416600090815260fd6020526040812054909183916110659086611da4565b61106f9190611dbb565b610b1c9190611ddd565b600054610100900460ff166110e45760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b61074a611427565b600054610100900460ff166111575760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b61074a61149e565b600054610100900460ff166111ca5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b61074a611512565b600054610100900460ff1661123d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b6112478282611584565b5050565b60335460ff1661074a5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161063a565b60006112f2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117119092919063ffffffff16565b805190915015610f0e57808060200190518101906113109190611df0565b610f0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161063a565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60335460ff161561074a5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161063a565b600054610100900460ff166114925760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b6033805460ff19169055565b600054610100900460ff166115095760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b61074a33610fe5565b600054610100900460ff1661157d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b600160c955565b600054610100900460ff166115ef5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161063a565b80518251146116665760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e64207368617260448201527f6573206c656e677468206d69736d617463680000000000000000000000000000606482015260840161063a565b60008251116116b75760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f20706179656573000000000000604482015260640161063a565b60005b8251811015610f0e576116ff8382815181106116d8576116d8611d75565b60200260200101518383815181106116f2576116f2611d75565b6020026020010151611720565b8061170981611e12565b9150506116ba565b6060610b1c8484600085611922565b6001600160a01b03821661179c5760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201527f7a65726f20616464726573730000000000000000000000000000000000000000606482015260840161063a565b600081116117ec5760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a20736861726573206172652030000000604482015260640161063a565b6001600160a01b038216600090815260fd6020526040902054156118785760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201527f2068617320736861726573000000000000000000000000000000000000000000606482015260840161063a565b60ff8054600181019091557fe08ec2af2cfc251225e1968fd6ca21e4044f129bffa95bac3503be8bdb30a3670180546001600160a01b0319166001600160a01b038416908117909155600090815260fd6020526040902081905560fb546118e0908290611d62565b60fb55604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910161072e565b60608247101561199a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161063a565b600080866001600160a01b031685876040516119b69190611e2b565b60006040518083038185875af1925050503d80600081146119f3576040519150601f19603f3d011682016040523d82523d6000602084013e6119f8565b606091505b5091509150611a0987838387611a14565b979650505050505050565b60608315611a83578251600003611a7c576001600160a01b0385163b611a7c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063a565b5081610b1c565b610b1c8383815115611a985781518083602001fd5b8060405162461bcd60e51b815260040161063a9190611b5a565b6001600160a01b03811681146105b657600080fd5b600060208284031215611ad957600080fd5b8135610a2e81611ab2565b60008060408385031215611af757600080fd5b8235611b0281611ab2565b91506020830135611b1281611ab2565b809150509250929050565b600060208284031215611b2f57600080fd5b5035919050565b60005b83811015611b51578181015183820152602001611b39565b50506000910152565b6020815260008251806020840152611b79816040850160208701611b36565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611bcc57611bcc611b8d565b604052919050565b600067ffffffffffffffff821115611bee57611bee611b8d565b5060051b60200190565b600082601f830112611c0957600080fd5b81356020611c1e611c1983611bd4565b611ba3565b82815260059290921b84018101918181019086841115611c3d57600080fd5b8286015b84811015611c585780358352918301918301611c41565b509695505050505050565b60008060008060808587031215611c7957600080fd5b8435611c8481611ab2565b9350602085810135611c9581611ab2565b9350604086013567ffffffffffffffff80821115611cb257600080fd5b818801915088601f830112611cc657600080fd5b8135611cd4611c1982611bd4565b81815260059190911b8301840190848101908b831115611cf357600080fd5b938501935b82851015611d1a578435611d0b81611ab2565b82529385019390850190611cf8565b965050506060880135925080831115611d3257600080fd5b5050611d4087828801611bf8565b91505092959194509250565b634e487b7160e01b600052601160045260246000fd5b8082018082111561077457610774611d4c565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611d9d57600080fd5b5051919050565b808202811582820484141761077457610774611d4c565b600082611dd857634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561077457610774611d4c565b600060208284031215611e0257600080fd5b81518015158114610a2e57600080fd5b600060018201611e2457611e24611d4c565b5060010190565b60008251611e3d818460208701611b36565b919091019291505056fea2646970667358221220033a52180e5b6d3a354ea8a7dd424a2810b2a8cb2c665667b7d76e8f74ee9cb364736f6c63430008110033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
